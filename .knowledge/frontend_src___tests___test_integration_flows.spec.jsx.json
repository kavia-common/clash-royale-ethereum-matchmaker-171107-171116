{"is_source_file": true, "format": "JavaScript/JSX", "description": "This file contains high-level integration tests for a React frontend application, specifically focusing on user flows such as profile listing, wallet connection via Ethereum provider, and related interactions. It mocks external API calls and Ethereum provider responses to ensure tests do not depend on real backend or blockchain access.", "external_files": ["../App"], "external_methods": ["jest.setTimeout", "render", "screen", "waitFor", "within", "userEvent.click", "ethers.utils.getAddress", "afterEach"], "published": ["mockFetchProfilesOnce", "installEthereumMock"], "classes": [], "methods": [{"name": "mockFetchProfilesOnce({ profiles, status = 200 })", "description": "Mocks the global fetch function to return predefined profile data for testing profile listing components.", "scope": "", "scopeKind": ""}, {"name": "installEthereumMock({ accounts = [ethers.utils.getAddress('0x1234567890abcdef1234567890abcdef12345678')], chainId = '0x1' } = {})", "description": "Sets up a mock window.ethereum object with request, on, removeListener methods for Ethereum wallet connection tests.", "scope": "", "scopeKind": ""}, {"name": "__emit(event, ...args)", "scope": "installEthereumMock.ethMock", "scopeKind": "class", "description": "unavailable"}], "calls": ["jest.setTimeout", "render", "screen.getByRole", "screen.getByLabelText", "within", "waitFor", "userEvent.click", "ethers.utils.getAddress", "jest.fn", "Object.defineProperty", "global.fetch", "window.ethereum"], "search-terms": ["integration tests", "Ethereum wallet", "mock fetch", "React testing library", "wallet connection", "profile listing"], "state": 2, "file_id": 13, "knowledge_revision": 103, "git_revision": "f51b57d3ce99fb9a7f652d998d9fa6cfe493f03c", "revision_history": [{"28": ""}, {"73": "c7f8ead161da6db7ecc89b2155f91844c0571569"}, {"74": "5a7ff2a5f327ec399646a4f506e23d532cb4f6ad"}, {"75": "5a7ff2a5f327ec399646a4f506e23d532cb4f6ad"}, {"76": "5a7ff2a5f327ec399646a4f506e23d532cb4f6ad"}, {"77": "8571ca82cc8013a4f1870c11525c1f8a2773d9a2"}, {"78": "11b17ffbceddf459723483da8da824f6215d3bad"}, {"79": "617f2d0a25b737115be3a1b1dbff634b3367cdbf"}, {"83": "0176940c17fd1618e08828f4fff36585d8dbf198"}, {"100": "3f0a55dbb70daebf5c2721ba4eebc6a042757bca"}, {"103": "f51b57d3ce99fb9a7f652d998d9fa6cfe493f03c"}], "ctags": [{"_type": "tag", "name": "__emit", "path": "/home/kavia/workspace/code-generation/clash-royale-ethereum-matchmaker-171107-171116/frontend/src/__tests__/test_integration_flows.spec.jsx", "pattern": "/^    __emit(event, ...args) {$/", "language": "JavaScript", "kind": "method", "signature": "(event, ...args)", "scope": "installEthereumMock.ethMock", "scopeKind": "class"}, {"_type": "tag", "name": "ethMock", "path": "/home/kavia/workspace/code-generation/clash-royale-ethereum-matchmaker-171107-171116/frontend/src/__tests__/test_integration_flows.spec.jsx", "pattern": "/^  const ethMock = {$/", "language": "JavaScript", "kind": "class", "scope": "installEthereumMock", "scopeKind": "class"}, {"_type": "tag", "name": "installEthereumMock", "path": "/home/kavia/workspace/code-generation/clash-royale-ethereum-matchmaker-171107-171116/frontend/src/__tests__/test_integration_flows.spec.jsx", "pattern": "/^function installEthereumMock({ accounts = [ethers.utils.getAddress('0x1234567890abcdef1234567890/", "language": "JavaScript", "kind": "function", "signature": "({ accounts = [ethers.utils.getAddress('0x1234567890abcdef1234567890abcdef12345678')], chainId = '0x1' } = {})"}, {"_type": "tag", "name": "mockFetchProfilesOnce", "path": "/home/kavia/workspace/code-generation/clash-royale-ethereum-matchmaker-171107-171116/frontend/src/__tests__/test_integration_flows.spec.jsx", "pattern": "/^function mockFetchProfilesOnce({ profiles, status = 200 }) {$/", "language": "JavaScript", "kind": "function", "signature": "({ profiles, status = 200 })"}, {"_type": "tag", "name": "ok", "path": "/home/kavia/workspace/code-generation/clash-royale-ethereum-matchmaker-171107-171116/frontend/src/__tests__/test_integration_flows.spec.jsx", "pattern": "/^  const response = { ok: status >= 200 && status < 300, status, json, text };$/", "language": "JavaScript", "kind": "property", "scope": "mockFetchProfilesOnce.response", "scopeKind": "class"}, {"_type": "tag", "name": "on", "path": "/home/kavia/workspace/code-generation/clash-royale-ethereum-matchmaker-171107-171116/frontend/src/__tests__/test_integration_flows.spec.jsx", "pattern": "/^    on: jest.fn((event, cb) => {$/", "language": "JavaScript", "kind": "property", "scope": "installEthereumMock.ethMock", "scopeKind": "class"}, {"_type": "tag", "name": "removeListener", "path": "/home/kavia/workspace/code-generation/clash-royale-ethereum-matchmaker-171107-171116/frontend/src/__tests__/test_integration_flows.spec.jsx", "pattern": "/^    removeListener: jest.fn((event, cb) => {$/", "language": "JavaScript", "kind": "property", "scope": "installEthereumMock.ethMock", "scopeKind": "class"}, {"_type": "tag", "name": "request", "path": "/home/kavia/workspace/code-generation/clash-royale-ethereum-matchmaker-171107-171116/frontend/src/__tests__/test_integration_flows.spec.jsx", "pattern": "/^    request: jest.fn(async ({ method }) => {$/", "language": "JavaScript", "kind": "property", "scope": "installEthereumMock.ethMock", "scopeKind": "class"}, {"_type": "tag", "name": "response", "path": "/home/kavia/workspace/code-generation/clash-royale-ethereum-matchmaker-171107-171116/frontend/src/__tests__/test_integration_flows.spec.jsx", "pattern": "/^  const response = { ok: status >= 200 && status < 300, status, json, text };$/", "language": "JavaScript", "kind": "class", "scope": "mockFetchProfilesOnce", "scopeKind": "class"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/clash-royale-ethereum-matchmaker-171107-171116/frontend/src/__tests__/test_integration_flows.spec.jsx", "pattern": "/^  const response = { ok: status >= 200 && status < 300, status, json, text };$/", "language": "JavaScript", "kind": "field", "scope": "mockFetchProfilesOnce.response", "scopeKind": "class"}], "hash": "44aa4e7b0006c60d8eabfb71560e88c3", "format-version": 4, "code-base-name": "frontend", "filename": "frontend/src/__tests__/test_integration_flows.spec.jsx", "fields": [{"name": "const response = { ok: status >= 200 && status < 300, status, json, text };", "scope": "mockFetchProfilesOnce.response", "scopeKind": "class", "description": "unavailable"}, {"name": "on: jest.fn((event, cb) => {", "scope": "installEthereumMock.ethMock", "scopeKind": "class", "description": "unavailable"}, {"name": "removeListener: jest.fn((event, cb) => {", "scope": "installEthereumMock.ethMock", "scopeKind": "class", "description": "unavailable"}, {"name": "request: jest.fn(async ({ method }) => {", "scope": "installEthereumMock.ethMock", "scopeKind": "class", "description": "unavailable"}]}